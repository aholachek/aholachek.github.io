{"version":3,"sources":["webpack:///./src/pages/portfolio/adsAuthorNetworks/assets/adslabs-network.png","webpack:///./src/pages/portfolio/adsAuthorNetworks/index.js","webpack:///./src/pages/portfolio/adsAuthorNetworks/assets/old-network.png","webpack:///./src/components/Post/index.js","webpack:///./src/pages/portfolio/adsAuthorNetworks/assets/network_again.mp4"],"names":["module","exports","ReactionGifGeneratorPage","render","title","src","adsLabsNetwork","alt","oldNetwork","href","className","rel","target","newNetworkVideo","autoplay","controls","Component","Post","componentDidMount","this","props","animatingOut","content","el","querySelector","anime","timeline","add","delay","begin","style","display","targets","translateY","elasticity","duration","querySelectorAll","opacity","x","i","easing","offset","children","ref"],"mappings":"gFAAAA,EAAOC,QAAU,IAA0B,+D,iJCQrCC,E,gLACJC,OAAA,WACE,OACE,kBAAC,IAAD,CAAMC,MAAM,oDACV,oJAKA,iEAEA,6RAKE,4BACE,8FAGA,wIAIA,yHAOJ,gCACE,yBAAKC,IAAKC,IAAgBC,IAAI,oCAC9B,sFAGF,8NAMA,yEAEA,gCACE,yBAAKF,IAAKG,IAAYD,IAAI,qCAC1B,4DAEF,8XAQA,saASA,iGAGA,2BACE,uBACEE,KAAK,0HACLC,UAAU,OACVC,IAAI,sBACJC,OAAO,UAJT,qCASF,oiBAWA,oeAUA,iYAQA,seASA,2BAAOP,IAAKQ,IAAiBC,UAAQ,EAACC,UAAQ,M,GApHfC,aA0HxBd,a,qBClIfF,EAAOC,QAAU,IAA0B,2D,oFCIrCgB,E,wLAMJC,kBAAA,WACE,IAAIC,KAAKC,MAAMC,aAAf,CACA,IAAMC,EAAUH,KAAKI,GAAGC,cAAc,wBACtCC,IACGC,WACAC,IAAI,CACHC,MAAO,IACPC,MAAO,WACLP,EAAQQ,MAAMC,QAAU,SAE1BC,QAASV,EACTW,WAAY,CAAC,OAAQ,GACrBC,WAAY,GACZC,SAAU,OAEXR,IAAI,CACHK,QAASV,EAAQc,iBAAiB,MAClCC,QAAS,CAAC,EAAG,GACbT,MAAO,SAACU,EAAGC,GAAJ,OAAc,IAAJA,GACjBJ,SAAU,IACVK,OAAQ,aACRC,OAAQ,Y,EAIdtC,OAAA,WAAU,IAAD,SACqBgB,KAAKC,MAAzBhB,EADD,EACCA,MAAOsC,EADR,EACQA,SACf,OACE,yBAAKhC,UAAU,aAAaiC,IAAK,SAAApB,GAAE,OAAK,EAAKA,GAAKA,IAChD,6BACE,yBAAKb,UAAU,sBACb,4BAAKN,IAEP,yBAAKM,UAAU,sBAAsBoB,MAAO,CAAEC,QAAS,SACrD,6BAAMW,O,GAxCC1B,aAgDJC,O,qBCpDfjB,EAAOC,QAAU,IAA0B","file":"component---src-pages-portfolio-ads-author-networks-index-js-261a628379425ca42d2a.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/adslabs-network-2aec846ab216e46af3ef9aeb6492f18b.png\";","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport Post from '../../../components/Post'\nimport adsLabsNetwork from './assets/adslabs-network.png'\nimport oldNetwork from './assets/old-network.png'\nimport newNetworkVideo from './assets/network_again.mp4'\n\nclass ReactionGifGeneratorPage extends Component {\n  render() {\n    return (\n      <Post title=\"Rethinking the ADS author network visualizations\">\n        <p>\n          I created a new type of interactive author network visualization for\n          the Astrophysics Data System and built it in D3.\n        </p>\n\n        <h2>The Problem: Force Directed Chaos</h2>\n\n        <p>\n          For any set of documents in the Astrophysics Data System, you can\n          construct an author network in which the nodes represent authors and\n          links represent co-authorship relationships between them. Ideally,\n          this information could quickly answer questions like:\n          <ol>\n            <li>\n              Which authors in a field tend to collaborate the most broadly?\n            </li>\n            <li>\n              Which collaborations over the course of an author's career have\n              resulted in the most influential papers?\n            </li>\n            <li>\n              What discrete sub-topics has an author focused on over the course\n              of his or her career?\n            </li>\n          </ol>\n        </p>\n\n        <figure>\n          <img src={adsLabsNetwork} alt=\"the original ads author network\" />\n          <figcaption>The original ADS author network visualization</figcaption>\n        </figure>\n\n        <p>\n          When I first started working at ADS, the author network was visualized\n          using the somewhat crowded force-directed layout shown above, which\n          did not do a great job of answering those questions.\n        </p>\n\n        <h2>My First Redesign: Return of the Hairball</h2>\n\n        <figure>\n          <img src={oldNetwork} alt=\"my first redesign of the network\" />\n          <figcaption>Redesign attempt #1</figcaption>\n        </figure>\n        <p>\n          As one of my first data visualization tasks ever, I tried to redo the\n          graph visualization in order to make it more readable. I removed the\n          circles, and fiddled with the force directed network settings to make\n          groups more apparent. The user could zoom, pan and drag nodes to\n          reorganize the network in order to explore the relationships between\n          authors.\n        </p>\n        <p>\n          So, for instance, in this network, unlike the first one, you can see\n          that Michael Kurtz works with two distinct groups. Still, this version\n          was quite similar to the original implementation. In addition, the\n          animation of the nodes finding their points of equilibrium was very\n          taxing for the browser, as there could be hundreds of author nodes and\n          thousands of links in a single visualization.\n        </p>\n\n        <h2>\n          The Solution: Automatic Group Detection and a Hierarchical Layout\n        </h2>\n        <p>\n          <a\n            href=\"https://ui.adsabs.harvard.edu/#search/q=%20author%3A%22kurtz%2Cm%22&sort=date%20desc%2C%20bibcode%20desc/author-network\"\n            className=\"lead\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            Check out the live version here.\n          </a>\n        </p>\n        <p>\n          I wanted a visualization that could support user exploration into\n          details like the zoomable node-link graph, but one which could also\n          tell you at a glance some important features of the network. I started\n          reading a bit about graph analysis and realized that some of the\n          features I was relying on the force-directed node layout to show the\n          user (like groups and collaborator nodes) could actually be calculated\n          more efficiently using algorithms. I used the Python NetworkX library\n          to add group information to the data.\n        </p>\n\n        <p>\n          I realized that there were new dimensions to the data that the\n          visualization could show. The papers themselves that formed the basis\n          of the node-link structure could be immediately accessible to the\n          user, possibly allowing the network visualization to be an alternate\n          way to view the results list. In addition, cumulative characteristics\n          of the groups—like long-term influence (citations), or short term\n          popularity (reads), could also be useful to show.\n        </p>\n\n        <p>\n          I ended up combining d3's sunburst layout and the hierarchical edge\n          bundling layout to make a two-level ring structure that shows\n          individual authors along the outer radius, and allows the user to view\n          group summaries along the inner radius. You can toggle on and off a\n          link layer that shows inter-group linkages and thus any important\n          collaborator nodes.\n        </p>\n        <p>\n          The video below shows the same data as the above two graphs—the\n          collaboration network for the astrophysicist Michael Kurtz. The\n          obvious two groups of the node-link network above here become three\n          groups (the purple on the one hand and the yellow and red on the\n          other). By clicking the link overlay checkbox, you can actually see\n          that the yellow and red groups have cowritten many papers together,\n          and thus the two groups are closely related, yet distinct.\n        </p>\n        <video src={newNetworkVideo} autoplay controls />\n      </Post>\n    )\n  }\n}\n\nexport default ReactionGifGeneratorPage\n","module.exports = __webpack_public_path__ + \"static/old-network-eba7004bcafe18ab91878889a8ed608a.png\";","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport anime from 'animejs'\n\nclass Post extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n    title: PropTypes.string\n  }\n\n  componentDidMount() {\n    if (this.props.animatingOut) return\n    const content = this.el.querySelector('.page--post__content')\n    anime\n      .timeline()\n      .add({\n        delay: 500,\n        begin: () => {\n          content.style.display = 'block'\n        },\n        targets: content,\n        translateY: ['50vh', 0],\n        elasticity: 50,\n        duration: 1200\n      })\n      .add({\n        targets: content.querySelectorAll('li'),\n        opacity: [0, 1],\n        delay: (x, i) => i * 200,\n        duration: 250,\n        easing: 'easeInSine',\n        offset: '-=100'\n      })\n  }\n\n  render() {\n    const { title, children } = this.props\n    return (\n      <div className=\"page--post\" ref={el => (this.el = el)}>\n        <div>\n          <div className=\"page--post__header\">\n            <h1>{title}</h1>\n          </div>\n          <div className=\"page--post__content\" style={{ display: 'none' }}>\n            <div>{children}</div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Post\n","module.exports = __webpack_public_path__ + \"static/network_again-e4cc316477e1bf4992bc0ad3c665a9a6.mp4\";"],"sourceRoot":""}