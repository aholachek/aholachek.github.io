{"version":3,"sources":["webpack:///./src/pages/code.js","webpack:///./src/components/PresentationList/Card.js","webpack:///./src/components/PresentationList/index.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_PresentationList__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_2__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","links","text","to","description","external","_ref","animatingOut","a","createElement","name","content","title","simple","Card_Card","skills","img","tag","react_default","className","dangerouslySetInnerHTML","__html","Card_renderDescription","src","style","opacity","key","href","gatsby_link_default","defaultProps","propTypes","PresentationList_Card","PresentationList_PresentationList","state","componentDidMount","this","props","el","querySelector","anime_min_default","targets","querySelectorAll","value","duration","easing","translateY","delay","x","i","elasticity","render","_this2","_this$props","ref","list","map","l","Object","assign","react","prop_types_default","string","array","bool"],"mappings":"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","file":"component---src-pages-code-js-4d2e79cb3e78aea1d1d5.js","sourcesContent":["import React, { Fragment } from 'react'\nimport PresentationList from './../components/PresentationList'\nimport Helmet from 'react-helmet'\n\nconst links = [\n  {\n    text: 'Github',\n    to: 'https://github.com/aholachek',\n    description: 'A few interesting open source libraries',\n    external: true\n  },\n  {\n    text: 'Codepen',\n    to: 'https://codepen.io/aholachek',\n    description: 'Tiny front-end projects and brainstorms',\n    external: true\n  },\n  {\n    text: 'D3 bl.ocks',\n    to: 'https://bl.ocks.org/aholachek',\n    description: 'Experiments with visualization techniques',\n    external: true\n  }\n]\n\nconst Code = ({ animatingOut }) => {\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Alex Holachek | Code</title>\n        <meta name=\"description\" content=\"A colorful little portfolio of web development work\" />\n      </Helmet>\n      <PresentationList\n        title=\"Code\"\n        links={links}\n        animatingOut={animatingOut}\n        simple={true}\n      />\n    </Fragment>\n  )\n}\n\nexport default Code\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Link from 'gatsby-link'\n\nconst renderDescription = description => (\n  <p\n    className=\"card__description\"\n    dangerouslySetInnerHTML={{ __html: description }}\n  />\n)\n\nconst Card = ({\n  skills,\n  text,\n  img,\n  external,\n  to,\n  description,\n  simple,\n  tag\n}) => {\n  const content = (\n    <div>\n      <div className=\"card__padding\">\n        {tag && <div className=\"card__tag\">{tag}</div>}\n\n        <div className=\"card__header\">\n          <h2>{text}</h2>\n          {!!description && renderDescription(description)}\n        </div>\n        {!!img && <img className=\"card__img\" src={img} />}\n      </div>\n    </div>\n  )\n  return (\n    <li\n      style={{ opacity: 0 }}\n      key={to}\n      className={`card ${simple ? 'card--simple' : ''}`}\n    >\n      {external ? <a href={to}>{content}</a> : <Link to={to}>{content}</Link>}\n    </li>\n  )\n}\n\nCard.defaultProps = {}\nCard.propTypes = {}\n\nexport default Card\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport anime from 'animejs'\nimport Card from './Card'\n\nclass PresentationList extends Component {\n  static propTypes = {\n    title: PropTypes.string,\n    links: PropTypes.array,\n    animatingOut: PropTypes.bool\n  }\n\n  state = {}\n\n  componentDidMount() {\n    if (this.props.animatingOut) return\n    const content = this.el.querySelector('.page--list__content')\n    anime({\n      targets: content.querySelectorAll('.card'),\n      opacity: {\n        value: 1,\n        duration: 300,\n        easing: 'easeInSine'\n      },\n      translateY: [50, 0],\n      delay: (x, i) => i * 100 + 300,\n      duration: 1000,\n      elasticity: 500\n    })\n  }\n\n  render() {\n    const { links, title, simple } = this.props\n    return (\n      <div className=\"page--list\" ref={el => (this.el = el)}>\n        <div>\n          <div className=\"page--list__header\">\n            <h1>{title}</h1>\n          </div>\n          <div className=\"page--list__content\">\n            <div>\n              <ul\n                className={`card-grid ${simple ? 'card-grid--simple' : ''}`}\n                ref={el => {\n                  this.list = el\n                }}\n              >\n                {links.map(l => <Card {...l} simple={simple} />)}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PresentationList\n"],"sourceRoot":""}